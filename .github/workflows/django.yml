name: Django CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    if: vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.6]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Show dir contents
      run: |
        ls -l
        
    - name: Install Dependencies
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
        
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      uses: docker/login-action@v2.1.0
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: docker.io
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKER_IO_USERNAME }}
        # Password or personal access token  used to log against the Docker registry
        password: ${{ secrets.DOCKER_IO_PASSWORD }}
        # Specifies whether the given registry is ECR (auto, true or false)
        ecr: false
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v4.0.0
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: 'src'# optional
        # Path to the Dockerfile
        file: './src/Dockerfile'# optional
        # List of metadata for an image
        labels: ''# optional
        # Do not use cache when building the image
        no-cache: false # optional, default is false
        # Always attempt to pull all referenced images
        pull: false # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: true # optional, default is false
        # List of tags
        tags: 'andrew86haine/timekeeper:0.1.${{github.run_number}},andrew86haine/timekeeper:latest'# optional
        
    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        # ClientId of the Azure Service principal created.
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        # TenantId of the Azure Service principal created.
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # Azure subscriptionId
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
        #enable-AzPSSession: true # optional
        
    - name: 'AZ Account Show'
      run: |
        az account show
        
    - name: Create AKS Cluster
      uses: Azure/aks-create-action@1.1
      with:
        # Client ID for Service Principal
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        # Client Secret for Service Principal
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_ARM_CLIENT_SECRET }}
        # Subscription for Service Principal
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        # Tenant for Service Principal
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        # Create (default) or delete
        ACTION_TYPE: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE }}
        # Resource Group for cluster
        RESOURCE_GROUP_NAME: ${{ vars.AZ_AKS_RG_NAME }}
        # Name for cluster
        CLUSTER_NAME: ${{ vars.AZ_AKS_CLUSTER_NAME }}
        # Size of cluster (dev or test)
        CLUSTER_SIZE: dev
        # Name for Storage Account
        STORAGE_ACCOUNT_NAME: ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}
        # Name for Storage Container
        STORAGE_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_CONTAINER_NAME }}
        # Access Key for Storage Container
        STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}

    - name: Azure Kubernetes Context
      uses: Azure/aks-set-context@v3
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      with:
        # Resource Group Name
        resource-group: ${{ vars.AZ_AKS_RG_NAME }}
        # AKS Cluster Name
        cluster-name: ${{ vars.AZ_AKS_CLUSTER_NAME }}
        
    - name: Create Nginx Ingress Controller
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      run: |
        NAMESPACE=${{ vars.TIMEKEEPER_NAMESPACE }}
        echo "Checking for ingress in namespace: $NAMESPACE"
        if [ -z "$(kubectl get service --namespace $NAMESPACE)" ]
        then
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

          helm install ingress-nginx ingress-nginx/ingress-nginx \
            --create-namespace \
            --namespace $NAMESPACE \
            --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz
        else
          echo "Ingress exists, skipping..."
        fi
        
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      if: ${{ vars.AKS_CLUSTER_CREATE_OR_DELETE == 'create' }}
      with:
        # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
        namespace: ${{ vars.TIMEKEEPER_NAMESPACE }}
        # Path to the manifest files which will be used for deployment.
        manifests: deployment/k8s/timekeeper/timekeeper-namespace.yaml, deployment/k8s/timekeeper/timekeeper-ingress.yaml, deployment/k8s/timekeeper/timekeeper-deployment.yaml
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: andrew86haine/timekeeper:0.1.${{github.run_number}}
        # Switch whether to pull the images from the registry before deployment to find out Dockerfile's path in order to add it to the annotations
        pull-images: true # optional, default is true
        # Deployment strategy to be used. Allowed values are basic, canary and blue-green
        strategy: basic # default is basic
        # deploy, promote, or reject
        action: deploy # default is deploy
        # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
        force: true # optional