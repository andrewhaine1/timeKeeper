name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.6]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show dir contents
      run: |
        ls -l
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - shell: bash
      env:
        SUPER_SECRET: ${{ secrets.DOCKER_IO_USERNAME }}
      run: |
        echo "$SUPER_SECRET"
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      uses: docker/login-action@v2.1.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: docker.io
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKER_IO_USERNAME }}
        # Password or personal access token  used to log against the Docker registry
        password: ${{ secrets.DOCKER_IO_PASSWORD }}
        # Specifies whether the given registry is ECR (auto, true or false)
        ecr: false
        # Log out from the Docker registry at the end of a job
        logout: true
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      uses: docker/build-push-action@v4.0.0
      with:
        # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
        add-hosts: ''# optional
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        allow: ''# optional
        # List of attestation parameters (e.g., type=sbom,generator=image)
        attests: ''# optional
        # List of build-time variables
        build-args: ''# optional
        # List of additional build contexts (e.g., name=path)
        build-contexts: ''# optional
        # Builder instance
        builder: ''# optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        cache-from: ''# optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        cache-to: ''# optional
        # Optional parent cgroup for the container used in the build
        cgroup-parent: ''# optional
        # Build's context is the set of files located in the specified PATH or URL
        context: 'src'# optional
        # Path to the Dockerfile
        file: './src/Dockerfile'# optional
        # List of metadata for an image
        labels: ''# optional
        # Load is a shorthand for --output=type=docker
        load: false # optional, default is false
        # Set the networking mode for the RUN instructions during build
        network: ''# optional
        # Do not use cache when building the image
        no-cache: false # optional, default is false
        # Do not cache specified stages
        no-cache-filters: ''# optional
        # List of output destinations (format: type=local,dest=path)
        outputs: ''# optional
        # List of target platforms for build
        platforms: ''# optional
        # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
        provenance: ''# optional
        # Always attempt to pull all referenced images
        pull: false # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: false # optional, default is false
        # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
        sbom: ''# optional
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        secrets: ''# optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        secret-files: ''# optional
        # Size of /dev/shm (e.g., 2g)
        shm-size: ''# optional
        # List of SSH agent socket or keys to expose to the build
        ssh: ''# optional
        # List of tags
        tags: 'latest'# optional
        # Sets the target stage to build
        target: ''# optional
        # Ulimit options (e.g., nofile=1024:1024)
        ulimit: ''# optional
        # GitHub Token used to authenticate against a repository for Git context
        github-token: ''# optional, default is ${{ github.token }}
#     - name: Run Tests
#       run: |
#         python src/timeKeeper/manage.py test
