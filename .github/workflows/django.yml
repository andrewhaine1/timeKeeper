name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.6]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show dir contents
      run: |
        ls -l
    - name: Output Run ID
      run: echo ${{ github.run_id }}
    - name: Output Run Number
      run: echo ${{ github.run_number }}
    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - shell: bash
      env:
        SUPER_SECRET: ${{ secrets.DOCKER_IO_USERNAME }}
      run: |
        echo "$SUPER_SECRET"
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      uses: docker/login-action@v2.1.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: docker.io
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKER_IO_USERNAME }}
        # Password or personal access token  used to log against the Docker registry
        password: ${{ secrets.DOCKER_IO_PASSWORD }}
        # Specifies whether the given registry is ECR (auto, true or false)
        ecr: false
        # Log out from the Docker registry at the end of a job
        logout: true
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      uses: docker/build-push-action@v4.0.0
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: 'src'# optional
        # Path to the Dockerfile
        file: './src/Dockerfile'# optional
        # List of metadata for an image
        labels: ''# optional
        # Do not use cache when building the image
        no-cache: false # optional, default is false
        # Always attempt to pull all referenced images
        pull: false # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: true # optional, default is false
        # List of tags
        tags: 'andrew86haine/timekeeper:0.1.${{github.run_number}},andrew86haine/timekeeper:latest'# optional
    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        # ClientId of the Azure Service principal created.
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        # TenantId of the Azure Service principal created.
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # Azure subscriptionId
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
        enable-AzPSSession: true # optional
        # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
        #environment: # optional, default is azurecloud
        # Set this value to true to enable support for accessing tenants without subscriptions
        #allow-no-subscriptions: # optional
        # Provide audience field for access-token. Default value is api://AzureADTokenExchange
        #audience: # optional, default is api://AzureADTokenExchange
    - name: 'Run az commands'
      run: |
        az account show
        az group list
        pwd 
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      with:
        # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
        namespace: timekeeper
        # Path to the manifest files which will be used for deployment.
        manifests: deployment/k8s/timekeeper/timekeeper-ingress.yaml, deployment/k8s/timekeeper/timekeeper-deployment.yaml
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: andrew86haine/timekeeper:0.1.${{github.run_number}}
        # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
        #imagepullsecrets: # optional
        # Switch whether to pull the images from the registry before deployment to find out Dockerfile's path in order to add it to the annotations
        pull-images: true # optional, default is true
        # Deployment strategy to be used. Allowed values are basic, canary and blue-green
        strategy: basic # default is basic
        # Route based on service, ingress or SMI for blue-green strategy
        #route-method: # optional, default is service
        # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
        #version-switch-buffer: # optional, default is 0
        # Traffic split method to be used. Allowed values are pod and smi
        #traffic-split-method: # optional, default is pod
        # Annotations in the form of key/value pair to be added to TrafficSplit. Relevant only if deployement strategy is blue-green or canary
        #traffic-split-annotations: # optional
        # Baseline and canary replicas count. Valid value between 0 to 100 (inclusive)
        #baseline-and-canary-replicas: # optional, default is 
        # Percentage of traffic redirect to canary deployment
        #percentage: # optional, default is 0
        # deploy, promote, or reject
        action: deploy # default is deploy
        # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
        force: true # optional
        # Github token
        #token: # default is ${{ github.token }}
        # Annotate the target namespace
        #annotate-namespace: # optional, default is true
        # True if cluster is AKS private cluster
        #private-cluster: # optional
        # Name of resource group - Only required if using private cluster
        #resource-group: # optional
        # Resource group name - Only required if using private cluster
        #name: # optional
        # True if the insecure-skip-tls-verify option should be used. Input should be 'true' or 'false'.
        #skip-tls-verify: # optional
#     - name: Run Tests
#       run: |
#         python src/timeKeeper/manage.py test
